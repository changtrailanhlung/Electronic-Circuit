CCS PCM C Compiler, Version 5.025, 41396               21-Oct-21 15:49

               Filename:   C:\Users\lehon\Desktop\Demo 5\Demo 5.lst

               ROM used:   122 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16f877a.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #fuses HS, NoWDT 
.................... #use delay(clock=12M) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  03
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  E3
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  NOP
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... //================================= 
....................  
.................... void main() 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  MOVLW  07
0022:  MOVWF  1C
0023:  BCF    03.7
.................... { 
....................    while(TRUE) 
....................    { 
....................    // LedR1 = on; LedR2 = on : 4s 
....................    output_high(pin_B0); // LedR1 on 
0024:  BCF    06.0
0025:  BCF    03.5
0026:  BSF    06.0
....................    output_high(pin_B5); // LedG2 on 
0027:  BSF    03.5
0028:  BCF    06.5
0029:  BCF    03.5
002A:  BSF    06.5
....................    delay_ms(5000); 
002B:  MOVLW  14
002C:  MOVWF  21
002D:  MOVLW  FA
002E:  MOVWF  22
002F:  CALL   004
0030:  DECFSZ 21,F
0031:  GOTO   02D
....................    //.................................. 
....................    // LedR1 = on; LedY2 = on : 1s 
....................    output_high(pin_B0); // LedR1 on 
0032:  BSF    03.5
0033:  BCF    06.0
0034:  BCF    03.5
0035:  BSF    06.0
....................    output_low(pin_B5); // LedG2 off 
0036:  BSF    03.5
0037:  BCF    06.5
0038:  BCF    03.5
0039:  BCF    06.5
....................    output_high(pin_B6); // LedY2 on 
003A:  BSF    03.5
003B:  BCF    06.6
003C:  BCF    03.5
003D:  BSF    06.6
....................    delay_ms(1000); 
003E:  MOVLW  04
003F:  MOVWF  21
0040:  MOVLW  FA
0041:  MOVWF  22
0042:  CALL   004
0043:  DECFSZ 21,F
0044:  GOTO   040
....................    //.................................. 
....................    // LedG1 = on; LedR2 = on : 4s 
....................    output_low(pin_B6); // LedY2 off 
0045:  BSF    03.5
0046:  BCF    06.6
0047:  BCF    03.5
0048:  BCF    06.6
....................    output_high(pin_B7); // LedR2 on 
0049:  BSF    03.5
004A:  BCF    06.7
004B:  BCF    03.5
004C:  BSF    06.7
....................    output_low(pin_B0); // LedR1 off 
004D:  BSF    03.5
004E:  BCF    06.0
004F:  BCF    03.5
0050:  BCF    06.0
....................    output_low(pin_B2); // LedG1 on 
0051:  BSF    03.5
0052:  BCF    06.2
0053:  BCF    03.5
0054:  BCF    06.2
....................    delay_ms(4000); 
0055:  MOVLW  10
0056:  MOVWF  21
0057:  MOVLW  FA
0058:  MOVWF  22
0059:  CALL   004
005A:  DECFSZ 21,F
005B:  GOTO   057
....................    //.................................. 
....................    // LedY1 = on; LedR2 = on : 1s 
....................    output_low(pin_B2);  //LedG1 off 
005C:  BSF    03.5
005D:  BCF    06.2
005E:  BCF    03.5
005F:  BCF    06.2
....................    output_high(pin_B1); // LedY1 on 
0060:  BSF    03.5
0061:  BCF    06.1
0062:  BCF    03.5
0063:  BSF    06.1
....................    output_high(pin_B7); // LedR2 on 
0064:  BSF    03.5
0065:  BCF    06.7
0066:  BCF    03.5
0067:  BSF    06.7
....................    delay_ms(1000); 
0068:  MOVLW  04
0069:  MOVWF  21
006A:  MOVLW  FA
006B:  MOVWF  22
006C:  CALL   004
006D:  DECFSZ 21,F
006E:  GOTO   06A
....................    //.................................. 
....................    // LedY1 = off; LedR2 = off 
....................    output_low(pin_B1);  //LedY off 
006F:  BSF    03.5
0070:  BCF    06.1
0071:  BCF    03.5
0072:  BCF    06.1
....................    output_low(pin_B7); // LedR2 off   
0073:  BSF    03.5
0074:  BCF    06.7
0075:  BCF    03.5
0076:  BCF    06.7
0077:  BSF    03.5
0078:  GOTO   024
....................    } 
.................... } 
0079:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
